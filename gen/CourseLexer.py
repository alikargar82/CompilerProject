# Generated from /home/ali/compiler/Course.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,26,374,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,1,
        0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,
        2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,
        3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,
        8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,
        9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,
        1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,
        1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,
        1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,
        1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,
        1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,
        1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,
        1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,
        1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,
        1,17,1,17,1,17,1,17,1,17,1,17,3,17,243,8,17,1,18,1,18,1,18,1,18,
        1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,
        1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,3,18,273,
        8,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,
        1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,
        1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,3,19,310,8,19,
        1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,
        1,20,1,20,1,20,1,20,1,20,1,20,1,20,3,20,332,8,20,1,21,1,21,5,21,
        336,8,21,10,21,12,21,339,9,21,1,21,1,21,1,22,4,22,344,8,22,11,22,
        12,22,345,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,3,23,357,
        8,23,1,24,4,24,360,8,24,11,24,12,24,361,1,24,1,24,1,25,1,25,5,25,
        368,8,25,10,25,12,25,371,9,25,1,25,1,25,0,0,26,1,1,3,2,5,3,7,4,9,
        5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,
        33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,1,0,
        4,3,0,10,10,13,13,34,34,1,0,48,57,3,0,9,10,13,13,32,32,2,0,10,10,
        13,13,395,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,
        0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,
        0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,
        0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,
        0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,
        0,0,0,0,51,1,0,0,0,1,53,1,0,0,0,3,59,1,0,0,0,5,67,1,0,0,0,7,80,1,
        0,0,0,9,87,1,0,0,0,11,93,1,0,0,0,13,95,1,0,0,0,15,97,1,0,0,0,17,
        99,1,0,0,0,19,113,1,0,0,0,21,126,1,0,0,0,23,136,1,0,0,0,25,150,1,
        0,0,0,27,167,1,0,0,0,29,173,1,0,0,0,31,181,1,0,0,0,33,186,1,0,0,
        0,35,242,1,0,0,0,37,272,1,0,0,0,39,309,1,0,0,0,41,331,1,0,0,0,43,
        333,1,0,0,0,45,343,1,0,0,0,47,356,1,0,0,0,49,359,1,0,0,0,51,365,
        1,0,0,0,53,54,5,110,0,0,54,55,5,97,0,0,55,56,5,109,0,0,56,57,5,101,
        0,0,57,58,5,58,0,0,58,2,1,0,0,0,59,60,5,97,0,0,60,61,5,117,0,0,61,
        62,5,116,0,0,62,63,5,104,0,0,63,64,5,111,0,0,64,65,5,114,0,0,65,
        66,5,58,0,0,66,4,1,0,0,0,67,68,5,100,0,0,68,69,5,101,0,0,69,70,5,
        115,0,0,70,71,5,99,0,0,71,72,5,114,0,0,72,73,5,105,0,0,73,74,5,112,
        0,0,74,75,5,116,0,0,75,76,5,105,0,0,76,77,5,111,0,0,77,78,5,110,
        0,0,78,79,5,58,0,0,79,6,1,0,0,0,80,81,5,108,0,0,81,82,5,101,0,0,
        82,83,5,118,0,0,83,84,5,101,0,0,84,85,5,108,0,0,85,86,5,58,0,0,86,
        8,1,0,0,0,87,88,5,116,0,0,88,89,5,97,0,0,89,90,5,103,0,0,90,91,5,
        115,0,0,91,92,5,58,0,0,92,10,1,0,0,0,93,94,5,91,0,0,94,12,1,0,0,
        0,95,96,5,44,0,0,96,14,1,0,0,0,97,98,5,93,0,0,98,16,1,0,0,0,99,100,
        5,115,0,0,100,101,5,116,0,0,101,102,5,117,0,0,102,103,5,100,0,0,
        103,104,5,101,0,0,104,105,5,110,0,0,105,106,5,116,0,0,106,107,5,
        95,0,0,107,108,5,100,0,0,108,109,5,97,0,0,109,110,5,116,0,0,110,
        111,5,97,0,0,111,112,5,58,0,0,112,18,1,0,0,0,113,114,5,114,0,0,114,
        115,5,111,0,0,115,116,5,115,0,0,116,117,5,116,0,0,117,118,5,101,
        0,0,118,119,5,114,0,0,119,120,5,95,0,0,120,121,5,102,0,0,121,122,
        5,105,0,0,122,123,5,108,0,0,123,124,5,101,0,0,124,125,5,58,0,0,125,
        20,1,0,0,0,126,127,5,99,0,0,127,128,5,97,0,0,128,129,5,112,0,0,129,
        130,5,97,0,0,130,131,5,99,0,0,131,132,5,105,0,0,132,133,5,116,0,
        0,133,134,5,121,0,0,134,135,5,58,0,0,135,22,1,0,0,0,136,137,5,99,
        0,0,137,138,5,108,0,0,138,139,5,97,0,0,139,140,5,115,0,0,140,141,
        5,115,0,0,141,142,5,101,0,0,142,143,5,115,0,0,143,144,5,95,0,0,144,
        145,5,102,0,0,145,146,5,105,0,0,146,147,5,108,0,0,147,148,5,101,
        0,0,148,149,5,58,0,0,149,24,1,0,0,0,150,151,5,101,0,0,151,152,5,
        110,0,0,152,153,5,114,0,0,153,154,5,111,0,0,154,155,5,108,0,0,155,
        156,5,108,0,0,156,157,5,109,0,0,157,158,5,101,0,0,158,159,5,110,
        0,0,159,160,5,116,0,0,160,161,5,95,0,0,161,162,5,109,0,0,162,163,
        5,111,0,0,163,164,5,100,0,0,164,165,5,101,0,0,165,166,5,58,0,0,166,
        26,1,0,0,0,167,168,5,102,0,0,168,169,5,108,0,0,169,170,5,111,0,0,
        170,171,5,119,0,0,171,172,5,58,0,0,172,28,1,0,0,0,173,174,5,45,0,
        0,174,175,5,32,0,0,175,176,5,116,0,0,176,177,5,121,0,0,177,178,5,
        112,0,0,178,179,5,101,0,0,179,180,5,58,0,0,180,30,1,0,0,0,181,182,
        5,114,0,0,182,183,5,101,0,0,183,184,5,102,0,0,184,185,5,58,0,0,185,
        32,1,0,0,0,186,187,5,109,0,0,187,188,5,111,0,0,188,189,5,100,0,0,
        189,190,5,101,0,0,190,191,5,115,0,0,191,192,5,58,0,0,192,34,1,0,
        0,0,193,194,5,102,0,0,194,195,5,111,0,0,195,196,5,114,0,0,196,243,
        5,109,0,0,197,198,5,97,0,0,198,199,5,117,0,0,199,200,5,100,0,0,200,
        201,5,105,0,0,201,243,5,111,0,0,202,203,5,117,0,0,203,204,5,114,
        0,0,204,243,5,108,0,0,205,206,5,118,0,0,206,207,5,105,0,0,207,208,
        5,100,0,0,208,209,5,101,0,0,209,243,5,111,0,0,210,211,5,116,0,0,
        211,212,5,101,0,0,212,213,5,120,0,0,213,243,5,116,0,0,214,215,5,
        109,0,0,215,216,5,99,0,0,216,243,5,113,0,0,217,218,5,116,0,0,218,
        243,5,102,0,0,219,220,5,99,0,0,220,221,5,111,0,0,221,222,5,100,0,
        0,222,223,5,105,0,0,223,224,5,110,0,0,224,243,5,103,0,0,225,226,
        5,101,0,0,226,227,5,115,0,0,227,228,5,115,0,0,228,229,5,97,0,0,229,
        243,5,121,0,0,230,231,5,115,0,0,231,232,5,104,0,0,232,233,5,111,
        0,0,233,234,5,114,0,0,234,235,5,116,0,0,235,236,5,95,0,0,236,237,
        5,97,0,0,237,238,5,110,0,0,238,239,5,115,0,0,239,240,5,119,0,0,240,
        241,5,101,0,0,241,243,5,114,0,0,242,193,1,0,0,0,242,197,1,0,0,0,
        242,202,1,0,0,0,242,205,1,0,0,0,242,210,1,0,0,0,242,214,1,0,0,0,
        242,217,1,0,0,0,242,219,1,0,0,0,242,225,1,0,0,0,242,230,1,0,0,0,
        243,36,1,0,0,0,244,245,5,98,0,0,245,246,5,101,0,0,246,247,5,103,
        0,0,247,248,5,105,0,0,248,249,5,110,0,0,249,250,5,110,0,0,250,251,
        5,101,0,0,251,273,5,114,0,0,252,253,5,105,0,0,253,254,5,110,0,0,
        254,255,5,116,0,0,255,256,5,101,0,0,256,257,5,114,0,0,257,258,5,
        109,0,0,258,259,5,101,0,0,259,260,5,100,0,0,260,261,5,105,0,0,261,
        262,5,97,0,0,262,263,5,116,0,0,263,273,5,101,0,0,264,265,5,97,0,
        0,265,266,5,100,0,0,266,267,5,118,0,0,267,268,5,97,0,0,268,269,5,
        110,0,0,269,270,5,99,0,0,270,271,5,101,0,0,271,273,5,100,0,0,272,
        244,1,0,0,0,272,252,1,0,0,0,272,264,1,0,0,0,273,38,1,0,0,0,274,275,
        5,114,0,0,275,276,5,101,0,0,276,277,5,103,0,0,277,278,5,105,0,0,
        278,279,5,115,0,0,279,280,5,116,0,0,280,281,5,114,0,0,281,282,5,
        97,0,0,282,283,5,116,0,0,283,284,5,105,0,0,284,285,5,111,0,0,285,
        310,5,110,0,0,286,287,5,99,0,0,287,288,5,104,0,0,288,289,5,97,0,
        0,289,290,5,112,0,0,290,291,5,116,0,0,291,292,5,101,0,0,292,310,
        5,114,0,0,293,294,5,113,0,0,294,295,5,117,0,0,295,296,5,105,0,0,
        296,310,5,122,0,0,297,298,5,101,0,0,298,299,5,120,0,0,299,300,5,
        97,0,0,300,310,5,109,0,0,301,302,5,114,0,0,302,303,5,101,0,0,303,
        304,5,115,0,0,304,305,5,111,0,0,305,306,5,117,0,0,306,307,5,114,
        0,0,307,308,5,99,0,0,308,310,5,101,0,0,309,274,1,0,0,0,309,286,1,
        0,0,0,309,293,1,0,0,0,309,297,1,0,0,0,309,301,1,0,0,0,310,40,1,0,
        0,0,311,312,5,111,0,0,312,313,5,112,0,0,313,314,5,101,0,0,314,332,
        5,110,0,0,315,316,5,105,0,0,316,317,5,110,0,0,317,318,5,118,0,0,
        318,319,5,105,0,0,319,320,5,116,0,0,320,332,5,101,0,0,321,322,5,
        114,0,0,322,323,5,101,0,0,323,324,5,115,0,0,324,325,5,116,0,0,325,
        326,5,114,0,0,326,327,5,105,0,0,327,328,5,99,0,0,328,329,5,116,0,
        0,329,330,5,101,0,0,330,332,5,100,0,0,331,311,1,0,0,0,331,315,1,
        0,0,0,331,321,1,0,0,0,332,42,1,0,0,0,333,337,5,34,0,0,334,336,8,
        0,0,0,335,334,1,0,0,0,336,339,1,0,0,0,337,335,1,0,0,0,337,338,1,
        0,0,0,338,340,1,0,0,0,339,337,1,0,0,0,340,341,5,34,0,0,341,44,1,
        0,0,0,342,344,7,1,0,0,343,342,1,0,0,0,344,345,1,0,0,0,345,343,1,
        0,0,0,345,346,1,0,0,0,346,46,1,0,0,0,347,348,5,116,0,0,348,349,5,
        114,0,0,349,350,5,117,0,0,350,357,5,101,0,0,351,352,5,102,0,0,352,
        353,5,97,0,0,353,354,5,108,0,0,354,355,5,115,0,0,355,357,5,101,0,
        0,356,347,1,0,0,0,356,351,1,0,0,0,357,48,1,0,0,0,358,360,7,2,0,0,
        359,358,1,0,0,0,360,361,1,0,0,0,361,359,1,0,0,0,361,362,1,0,0,0,
        362,363,1,0,0,0,363,364,6,24,0,0,364,50,1,0,0,0,365,369,5,35,0,0,
        366,368,8,3,0,0,367,366,1,0,0,0,368,371,1,0,0,0,369,367,1,0,0,0,
        369,370,1,0,0,0,370,372,1,0,0,0,371,369,1,0,0,0,372,373,6,25,0,0,
        373,52,1,0,0,0,10,0,242,272,309,331,337,345,356,361,369,1,6,0,0
    ]

class CourseLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    MODE_NAMES = 18
    LEVEL = 19
    FLOW_TYPE = 20
    ENROLL_MODE = 21
    STRING = 22
    INT = 23
    BOOLEAN = 24
    WS = 25
    COMMENT = 26

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'name:'", "'author:'", "'description:'", "'level:'", "'tags:'", 
            "'['", "','", "']'", "'student_data:'", "'roster_file:'", "'capacity:'", 
            "'classes_file:'", "'enrollment_mode:'", "'flow:'", "'- type:'", 
            "'ref:'", "'modes:'" ]

    symbolicNames = [ "<INVALID>",
            "MODE_NAMES", "LEVEL", "FLOW_TYPE", "ENROLL_MODE", "STRING", 
            "INT", "BOOLEAN", "WS", "COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "MODE_NAMES", "LEVEL", "FLOW_TYPE", 
                  "ENROLL_MODE", "STRING", "INT", "BOOLEAN", "WS", "COMMENT" ]

    grammarFileName = "Course.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


